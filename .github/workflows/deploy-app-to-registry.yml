name: Scan, Build, and Push Docker Image

on:
  push:
    paths:
      - 'api/**'
  pull_request:
    paths:
      - 'api/**'
  workflow_dispatch:

jobs:
  scan-and-build:
    name: Scan Code and Build Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install Trivy
      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget
          wget -qO- https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.45.1_Linux-64bit.tar.gz | tar zxvf -
          sudo mv trivy /usr/local/bin/

      # Step 3: Scan Python dependencies in the api folder
      - name: Scan Python Dependencies
        working-directory: ./api
        run: |
          if [ -f "requirements.txt" ]; then
            trivy fs --security-checks vuln --exit-code 1 --severity HIGH,CRITICAL .
          else
            echo "No requirements.txt found. Skipping Python dependency scan."
          fi

      # Step 4: Scan the Dockerfile
      - name: Scan Dockerfile
        working-directory: ./api
        run: |
          if [ -f "Dockerfile" ]; then
            trivy config --exit-code 1 --severity HIGH,CRITICAL .
          else
            echo "No Dockerfile found. Skipping Dockerfile scan."
          fi

      # Step 5: Build Docker Image
      - name: Build Docker Image
        working-directory: ./api
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:latest .

      # Step 6: Scan Built Docker Image
      - name: Scan Built Docker Image
        run: |
          trivy image --severity HIGH,CRITICAL --exit-code 1 ${{ secrets.DOCKER_USERNAME }}/api:latest

      # Step 7: Log in to Docker Registry
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 8: Push Docker Image
      - name: Push Docker Image
        working-directory: ./api
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/flask-app:latest ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
